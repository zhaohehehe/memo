<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.2 on 2015-08-27 -->

<plugin>
  <name>proguard-maven-plugin</name>
  <description>Maven 2 Plugin for ProGuard</description>
  <groupId>com.github.wvengen</groupId>
  <artifactId>proguard-maven-plugin</artifactId>
  <version>2.0.11</version>
  <goalPrefix>proguard</goalPrefix>
  <mojos>
    <mojo>
      <goal>proguard</goal>
      <description>The Obfuscate task provides a stand-alone obfuscation task
</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>com.github.wvengen.maven.proguard.ProGuardMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>addMavenDescriptor</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to true to include META-INF/maven/** maven descriptord</description>
        </parameter>
        <parameter>
          <name>appendClassifier</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set to false to exclude the attachArtifactClassifier from the Artifact final name. Default value is true.</description>
        </parameter>
        <parameter>
          <name>archive</name>
          <type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maven archive configuration to use. only if assembly is used.</description>
        </parameter>
        <parameter>
          <name>assembly</name>
          <type>com.github.wvengen.maven.proguard.Assembly</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bundle project dependency to resulting jar. Specifies list of artifact inclusions</description>
        </parameter>
        <parameter>
          <name>attach</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies whether or not to attach the created artifact to the project</description>
        </parameter>
        <parameter>
          <name>attachArtifactClassifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies attach artifact Classifier, Ignored if attach=false</description>
        </parameter>
        <parameter>
          <name>attachArtifactType</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies attach artifact type</description>
        </parameter>
        <parameter>
          <name>exclusions</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of dependency exclusions</description>
        </parameter>
        <parameter>
          <name>includeDependency</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies that project compile dependencies be added as -libraryjars to proguard arguments. Dependency itself is not included in resulting jar unless you set includeDependencyInjar to true</description>
        </parameter>
        <parameter>
          <name>includeDependencyInjar</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies that project compile dependencies should be added as injar.</description>
        </parameter>
        <parameter>
          <name>inFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Apply ProGuard classpathentry Filters to input jar. e.g. !**.gif,!**/tests/**&apos;</description>
        </parameter>
        <parameter>
          <name>injar</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>Specifies the input jar name (or wars, ears, zips) of the application to be processed. You may specify a classes directory e.g. &apos;classes&apos;. This way plugin will processed the classes instead of jar. You would need to bind the execution to phase &apos;compile&apos; or &apos;process-classes&apos; in this case.</description>
        </parameter>
        <parameter>
          <name>injarNotExistsSkip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass ProGuard processing when injar does not exists.</description>
        </parameter>
        <parameter>
          <name>libs</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Additional -libraryjars e.g. ${java.home}/lib/rt.jar Project compile dependency are added automatically. See exclusions</description>
        </parameter>
        <parameter>
          <name>mappingFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the ProGuard mapping file.</description>
        </parameter>
        <parameter>
          <name>maxMemory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The max memory the forked java process should use, e.g. 256m</description>
        </parameter>
        <parameter>
          <name>obfuscate</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies not to obfuscate the input class files.</description>
        </parameter>
        <parameter>
          <name>options</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>ProGuard configuration options</description>
        </parameter>
        <parameter>
          <name>outFilter</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Apply ProGuard classpathentry Filters to output jar. e.g. !**.gif,!**/tests/**&apos;</description>
        </parameter>
        <parameter>
          <name>outjar</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Specifies the names of the output jars. If attach=true the value ignored and name constructed base on classifier If empty input jar would be overdriven.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Directory containing the input and generated JAR.</description>
        </parameter>
        <parameter>
          <name>proguardInclude</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Recursively reads configuration options from the given file filename</description>
        </parameter>
        <parameter>
          <name>proguardMainClass</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>ProGuard main class name.</description>
        </parameter>
        <parameter>
          <name>proguardVersion</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Select specific ProGuard version from plugin dependencies</description>
        </parameter>
        <parameter>
          <name>seedFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the name of the ProGuard seed file.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass ProGuard processing entirely.</description>
        </parameter>
      </parameters>
      <configuration>
        <addMavenDescriptor implementation="boolean" default-value="false"/>
        <appendClassifier implementation="boolean" default-value="true"/>
        <attach implementation="boolean" default-value="false"/>
        <attachArtifactClassifier implementation="java.lang.String" default-value="small"/>
        <attachArtifactType implementation="java.lang.String" default-value="jar"/>
        <includeDependency implementation="boolean" default-value="true"/>
        <includeDependencyInjar implementation="boolean" default-value="false"/>
        <injar implementation="java.lang.String">${project.build.finalName}.jar</injar>
        <injarNotExistsSkip implementation="boolean" default-value="false"/>
        <mappingFileName implementation="java.lang.String" default-value="proguard_map.txt"/>
        <obfuscate implementation="boolean" default-value="true"/>
        <outputDirectory implementation="java.io.File">${project.build.directory}</outputDirectory>
        <proguardInclude implementation="java.io.File" default-value="${basedir}/proguard.conf"/>
        <proguardMainClass implementation="java.lang.String" default-value="proguard.ProGuard"/>
        <seedFileName implementation="java.lang.String" default-value="proguard_seed.txt"/>
        <skip implementation="boolean">${proguard.skip}</skip>
      </configuration>
    </mojo>
  </mojos>
</plugin>