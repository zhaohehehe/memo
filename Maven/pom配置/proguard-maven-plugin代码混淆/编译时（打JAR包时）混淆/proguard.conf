#==========================================混淆配置==========================================================
#JDK目标版本1.7
-target 1.7
#不做收缩（删除注释、未被引用代码） -->
-dontshrink
#不做优化（变更代码实现逻辑）
-dontoptimize
#忽略警告信息  
-ignorewarnings  
#混淆时不会产生形形色色的类名   
#-dontusemixedcaseclassnames  
#不预校验  
#-dontpreverify  
#输出生成信息  
-verbose   
#打印混淆映射
-printmapping proguard.map
#配置增量混淆，如果有冲突会给出warnings,不使用 
#-applymapping proguard.map
#混淆字段和方法名的字典 
#-obfuscationdictionary dictionary.txt
#混淆类名的字典 
#-classobfuscationdictionary classdictionary.txt
#混淆包名的字典
#-packageobfuscationdictionary packagedictionary.txt
#==========================================必要基础配置========================================================== 
#为了防止同名冲突，设置不同类的相同member有不同的混淆映射名字(确定统一的混淆类的成员名称来增加混淆 )
-useuniqueclassmembernames
#确定统一的混淆类的成员名称来增加混淆 设置字段、方法名可以相同，只要他们的参数和返回值不同就可以，使得反编译的代码更加难以看懂 !!!有些工具会有问题，可选设置。
#例如The class java.lang.reflect.Proxy can't handle overloaded methods.
#-overloadaggressively
#WEB项目保留class的包名前缀 ，不做处理 
-keeppackagenames
#?????
-keepdirectories
-keepattributes	Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod
#设置保留已保留方法的参数的名称及类型。只有开启混淆时可用。
#-keepparameternames
#不路过非公用类文件及成员
-dontskipnonpubliclibraryclasses
-dontskipnonpubliclibraryclassmembers
#不混淆protected的成员变量和方法
#-keepclassmembers class * {protected *; }
#处理native
-keepclasseswithmembernames,includedescriptorclasses class * 
							{
								native <methods>;
							}
#处理序列化：全局模板配置
#不混淆类名 
-keep !enum * implements java.io.Serializable
#不混淆类成员（包括成员函数和成员方法）
-keepclassmembers class * implements java.io.Serializable 
							{
								static final long serialVersionUID;
								private static final java.io.ObjectStreamField[] serialPersistentFields;
								!static !transient <fields>;
#								!private <fields>;
#								!private <methods>;
								private void writeObject(java.io.ObjectOutputStream);
								private void readObject(java.io.ObjectInputStream);
								java.lang.Object writeReplace();
								java.lang.Object readResolve();
							}
#处理RMI
-keep interface * extends java.rmi.Remote { <methods>; }
-keep class * implements java.rmi.Remote 
							{ 
    							<init>(java.rmi.activation.ActivationID, java.rmi.MarshalledObject); 
							} 
#处理Servlet
-keep public class * implements javax.servlet.Servlet
#处理Applet
-keep public class * extends java.applet.Applet
#处理枚举
-keepclassmembers,allowoptimization enum * 
							{
								public static **[] values();
								public static ** valueOf(java.lang.String);
							}
#处理JAVA数据库驱动 
-keep class * implements java.sql.Driver
#J2EE注入
-keepclassmembers class * 
							{
								@javax.annotation.Resource *;
							}
#Spring Framwork注入
-keepclassmembers class * 
							{
								@org.springframework.beans.factory.annotation.Autowired *;
							}
#WebMethod注入
-keepclassmembers class * 
							{
								@javax.jws.WebMethod *;
							}
#不混淆所有的set/get方法及构造函数 ,第三方框架可能会用到
-keepclassmembers class * {	<init>(...); void set*(***);*** get*();}
#==========================================处理反射========================================================== 				
#BeafGlobals.class.getResource("/").getPath()
#==========================================处理jsp========================================================== 				
-keep !enum com.beaf.util.BeafGlobals{<methods>;}
#-keepclassmembers class com.beaf.security.frameservice.*{ <methods>;}
-keepclassmembers class com.beaf.dao.DaoSupportUtil{ <methods>;}
#==========================================SSH配置========================================================== 				
#dao层 
-keep !enum com.bonc.dao.*
-keep !enum com.beaf.dao.*
-keep !enum com.bonc.dao.impl.*
-keep !enum com.beaf.dao.impl.*
-keep !enum com.bonc.**.dao.*
-keep !enum com.beaf.**.dao.*
-keep !enum com.bonc.**.dao.impl.*
-keep !enum com.beaf.**.dao.impl.*
-keep !enum com.beaf.dao.imp.JdbcManagerImp
#logic层
#1.logic.imp多是通过bean实例化注入，而且都配置事务代理
#2.logic多是通过@javax.annotation.Resource实例化注入
-keep !enum com.bonc.logic.*
-keep !enum com.beaf.logic.*
-keep !enum com.bonc.**.logic.*
-keep !enum com.beaf.**.logic.*
-keep !enum com.bonc.logic.imp.*
-keep !enum com.beaf.logic.imp.*
-keep !enum com.bonc.**.logic.imp.*
-keep !enum com.beaf.**.logic.imp.*
-keep !enum com.bonc.dataplatform.repository.monitor.managersupport.EtlMonitorManager
#bean注入 
#service层 :@Resources注解
-keep !enum com.bonc.dataplatform.bdi.exchange.service.ProxyContainerService
#IEngineService为WebService
-keep !enum com.bonc.dataplatform.bdi.model.service.IEngineService
-keep !enum com.bonc.dataplatform.workflow.logic.service.BeafService
#service.impl：bean实例化注入
-keep !enum com.bonc.dataplatform.workflow.logic.service.impl.*
-keep !enum com.bonc.dataplatform.bdi.dataflow.variable.log.service.impl.*
-keep !enum com.bonc.pure.service.impl.*
#soaws.service层特点：public interface IEtlRestService
#soaws.service.impl层特点：
#1.@Resource(name = "apiUtil")
#2.@Controller
#  @RequestMapping("/etlRestService")
#  public class EtlRestServiceImp implements IEtlRestService{...}
#3.@RequestMapping(value = "/importAndCheckInWorkflows", method = RequestMethod.POST)
-keep !enum com.bonc.soaws.service.*
-keep !enum com.bonc.soaws.service.impl.*
-keep !enum com.beaf.soaws.service.*
-keep !enum com.beaf.soaws.service.impl.*
-keep !enum com.bonc.**.soaws.service.*
-keep !enum com.bonc.**.soaws.service.impl.*
-keep !enum com.beaf.**.soaws.service.*
-keep !enum com.beaf.**.soaws.service.impl.*
#soaws :bean注入
-keep !enum com.beaf.soaws.interceptor.CatchExceptioInterceptor
#webservice层特点: WebMethod注解
-keep !enum com.bonc.dataplatform.bdi.api.webservice.*
-keep !enum com.bonc.dataplatform.bdi.api.webservice.pig.*
-keep !enum com.bonc.dataplatform.bdi.api.webservice.dataflow.*
-keep !enum com.bonc.dataplatform.bdi.api.webservice.workflow.*
-keep !enum com.bonc.dataplatform.meta.interfaces.webservice.*
#frameservice: @Resources注解
-keep !enum com.beaf.security.frameservice.*
-keep !enum com.beaf.security.frameservice.imp.*
#cache 
-keep !enum com.beaf.cache.CacheUtilFactory
#web.action 
-keep !enum com.bonc.web.action.*{*;}
-keep !enum com.beaf.web.action.*{*;}
-keep !enum com.bonc.**.web.action.*{*;}
-keep !enum com.beaf.**.web.action.*{*;}
#struts2
-keep !enum com.beaf.wwextendresult.JfreeChartResult{<methods>;}
-keep !enum com.beaf.wwextendresult.ExcelResult{<methods>;}
-keep !enum com.bonc.pure.interceptor.*{*;}
-keep !enum com.bonc.pure.struts2.*Action{*;}
-keep !enum com.bonc.tags.html.components.SelectListAction{*;}
-keep !enum com.bonc.tags.chart.webcharts.ChartAction{*;}
#commons
-keep !enum com.bonc.commons.orm.hibernate.HibernateDaoImpl
#bdi
-keep !enum com.bonc.dataplatform.bdi.exchange.executecenter.*
-keep !enum com.bonc.dataplatform.bdi.exchange.executecenter.processExecutecenter.*
-keep !enum com.bonc.dataplatform.bdi.exchange.service.*
-keep !enum com.bonc.dataplatform.bdi.rmi.*
-keep !enum com.bonc.dataplatform.bdi.rmi.impl.*
#beaf.basecomponent
-keep !enum com.beaf.basecomponent.accesscontrol.client.*
-keep !enum com.beaf.basecomponent.accesscontrol.server.*
-keep !enum com.beaf.basecomponent.accesscontrol.client.impl.*
-keep !enum com.beaf.basecomponent.accesscontrol.server.impl.*
#po
-keep !enum com.bonc.po.*{*;}
-keep !enum com.beaf.po.*{*;}
-keep !enum com.bonc.**.po.*{*;}
-keep !enum com.beaf.**.po.*{*;}
#vo
-keep !enum com.bonc.vo.*{*;}
-keep !enum com.beaf.vo.*{*;}
-keep !enum com.bonc.**.vo.*{*;}
-keep !enum com.beaf.**.vo.*{*;}
# bean层都混淆
#注解形式注入 ，例如@Resource(name="beafTenantUtils")
-keep !enum com.bonc.dataplatform.utils.ApiUtil
-keep !enum com.beaf.util.BeafTenantUtils
-keep !enum com.beaf.util.AmUtils
-keep !enum com.beaf.util.MetaAggregateUtil
-keep !enum com.beaf.util.SpringHelpForCustmoer
-keep !enum com.beaf.util.UserRoleUtils
-keep !enum com.beaf.util.StringUtils
#spring配置文件实例化bean
-keep !enum com.beaf.util.FileUtil
-keep !enum com.bonc.base.util.SystemProperties
-keep !enum com.bonc.dataplatform.repository.util.BdrDaoSupportUtil
-keep !enum com.bonc.dataplatform.utils.ApiUtil
-keep !enum com.bonc.dataplatform.repository.monitor.util.EtlMonitorUtils
-keep !enum com.bonc.dataplatform.repository.util.BdrDaoSupportUtil
-keep !enum com.bonc.dataplatform.datagovernance.service.util.InitProConfig
-keep !enum com.bonc.dataplatform.datagovernance.service.util.InitProcName
-keep !enum com.bonc.dataplatform.bdi.common.util.SpringContextUtil
-keep !enum com.bonc.dataplatform.repository.util.quartz.*
-keep !enum com.bonc.dataplatform.meta.appmanage.util.PubInstanceJob
-keep !enum com.bonc.dataplatform.meta.resource.resource.util.*
#脚本执行
-keep !enum com.bonc.deployment.tool.sql.**{*;}
#log
-keep !enum com.bonc.pure.runner.VisitLogRunner
-keep !enum com.bonc.pure.UploadFileHelper
#Quartz:bean注入 
-keep !enum com.bonc.dataplatform.architect.inspect.extract.HouseSchedualQuartzBean
-keep !enum com.bonc.dataplatform.datagovernance.service.biz.*
-keep !enum com.bonc.dataplatform.datagovernance.monitor.operationwarn.*
-keep !enum com.bonc.dataplatform.datagovernance.service.resbackupProcess.ScanDealyTask
-keep !enum com.bonc.bds.monitor.obtain.BdsMonitorSchedualQuartzBean
-keep !enum com.bonc.dataplatform.meta.modelcheck.task.ModelCheckTimerTask
-keep !enum com.bonc.dataplatform.meta.model.task.*
-keep !enum com.bonc.dataplatform.meta.exceptionobserve.dataextract.*
-keep !enum com.bonc.dataplatform.meta.todotask.timertask.ProcessTimerTask
-keep !enum com.bonc.dataplatform.meta.codemanager.logic.MessageRemindJob
#bdi配置事务
-keepclassmembers class com.**.*ServiceImpl 
							{
								*** insert*(...);
								*** save*(...);
								*** update*(...);
								*** delete*(...);
								*** execute*(...);
							}
#其他TransactionProxyFactoryBean
-keepclassmembers class com.beaf.dao.imp.JdbcManagerImp
							{
								*** insert*(...);
								*** update*(...);
								*** edit*(...);
								*** *dit*(...);
								*** *Do(...);
								*** save*(...);
								*** *ist*(...);
								*** *Exp(...);
								*** *Imp(...);
								*** finis*(...);
								*** pars*(...);
								*** delete*(...);
								*** find*(...);
								*** exe*(...);
								*** gen*(...);
								*** beafServiceMenubarSelectService(...);
								*** remove*(...);
								*** add*(...);
								*** get*(...);
								*** logi*(...);
								*** load*(...);
								*** metaModelView*(...);
								*** *ByHand(...);
								*** *ByFile(...);
								*** checkIn*(...);
								*** saveAndCheckIn*(...);
								*** importAndCheckin*(...);
							}
-keepclassmembers class com.**.logic.imp.*
							{
								*** insert*(...);
								*** update*(...);
								*** edit*(...);
								*** *dit*(...);
								*** *Do(...);
								*** save*(...);
								*** *ist*(...);
								*** *Exp(...);
								*** *Imp(...);
								*** finis*(...);
								*** pars*(...);
								*** delete*(...);
								*** find*(...);
								*** exe*(...);
								*** gen*(...);
								*** beafServiceMenubarSelectService(...);
								*** remove*(...);
								*** add*(...);
								*** get*(...);
								*** logi*(...);
								*** load*(...);
								*** metaModelView*(...);
								*** *ByHand(...);
								*** *ByFile(...);
								*** checkIn*(...);
								*** saveAndCheckIn*(...);
								*** importAndCheckin*(...);
							}

#不确定????????????????????????
-keepclassmembers class com.bonc.dataplatform.meta.model.task.*
							{
								*** insert*(...);
								*** update*(...);
								*** edit*(...);
								*** *dit*(...);
								*** *Do(...);
								*** save*(...);
								*** *ist*(...);
								*** *Exp(...);
								*** *Imp(...);
								*** finis*(...);
								*** pars*(...);
								*** delete*(...);
								*** find*(...);
								*** exe*(...);
								*** gen*(...);
								*** beafServiceMenubarSelectService(...);
								*** remove*(...);
								*** add*(...);
								*** get*(...);
								*** logi*(...);
								*** load*(...);
								*** metaModelView*(...);
								*** *ByHand(...);
								*** *ByFile(...);
								*** checkIn*(...);
								*** saveAndCheckIn*(...);
								*** importAndCheckin*(...);
							}
-keep !enum com.beaf.generator.task.*