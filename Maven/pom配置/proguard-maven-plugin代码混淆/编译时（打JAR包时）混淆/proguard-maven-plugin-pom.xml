<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bonc.deployment</groupId>
	<artifactId>codeconfusion-demo</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>codeconfusion-demo Maven Webapp</name>
	<url>http://maven.apache.org</url>
	
	<build>
		<finalName>CodeConfusion</finalName>
		<plugins>
			<plugin>
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- 混淆时刻，这里是打包的时候混淆 -->
						<phase>package</phase>
						<goals>
							<!-- 使用插件的什么功能，当然是混淆 -->
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 是否混淆 -->
					<obfuscate>true</obfuscate>
					<proguardInclude>${basedir}/proguard.conf</proguardInclude>
					<outjar>${project.artifactId}-${project.version}.war</outjar>
					<!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
					<libs>
						<lib>${java.home}/lib/rt.jar</lib>
					</libs>
					<!-- 加载文件的过滤器，就是你的工程目录了 -->
					<!-- <inFilter>**/*</inFilter> -->
					<!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧 -->
					<injar>classes</injar>
					<injarNotExistsSkip>true</injarNotExistsSkip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
